clearset mem 300muse "/Users/akeil/School/Outside Projects/CopperArsenic/Descriptive/datlib/lubin_ind", replacemerge smid using "/Users/akeil/School/Outside Projects/CopperArsenic/Descriptive/datlib/lubin_exp", sort uniqmastersort smid age  	  	*vars as lubin did them  	*age categories  	gen agecat40 = (age<40)  	gen agecat44 = (age >= 40 & age<45)  	gen agecat49 = (age >= 45 & age<50)  	gen agecat54 = (age >= 50 & age<55)  	gen agecat59 = (age >= 55 & age<60)  	gen agecat64 = (age >= 60 & age<65)  	gen agecat69 = (age >= 65 & age<70)  	gen agecat74 = (age >= 70 & age<75)  	  	gen agecat79 = (age >= 75 & age<80)  	  	gen agecat84 = (age >= 80 & age<85)  	  	gen agecat85 = (age >= 85 & age<. )  	  	*year, year categories  	gen year = year(hiredate + empdur*365.25)  	*list smid hiredate age empdur year in 1/100  	  	* limit to current and those that retired over 50  	gen ageretire = (termdate-dob)/365.25  	  	keep if ageretire > 50  	  	*check other exposure metric  	gen d_lubin_alt = 0.29*(aslt+aslt)+0.58*asmd+11.3*ashi  	  	  	  	  	  	  	  	  	  	  	  	  	  	* err model - point exposure	* take only last observation	keep if age == age_exit		* look at rr first	binreg cancer d_lubin, rr	binreg respcan d_lubin, rr	binreg cancer d_lubin_alt, rr	binreg respcan d_lubin_alt, rr	/* from example		program mlnexpgr		version 10		args lnf b1x b0 sigma /*lnf = nat. log mean function, b1x = beta coefs, b0 = intercept, sigma = std. error*/		tempvar res		quietly gen double `res' = $ML_y1 - exp(`b0'*(1+exp(-`b1x')))		quietly replace `lnf' = -0.5*ln(2*_pi)-ln(`sigma')-0.5*`res'^2/`sigma'^2 /* log likelihood for normally distributed f */		/* probit model		quietly replace ÔlnfÕ = ln(normal( ÔxbÕ )) ///			if $ML_y1 == 1		quietly replace ÔlnfÕ = ln(normal( -ÔxbÕ )) ///			if $ML_y1 == 0		*/ 	end		ml model lf mlnexpgr (b1: rep78 = headroom, nocons) (b0:) (sigma:)	  	ml max*//* logit model	program mylogit_d2		version 9.1		args todo b inf g negH g1		tempvar xb lj		mleval `xb' = `b'		quietly {				gen double 	`lj' = invlogit(`xb') if $ML_y1 ==1				replace 	`lj' = invlogit(-`xb') if $ML_y1 ==0				nlsum `ing' = ln(`lj')				if (`todo'==0 | `inf' >= .) exit								replace `g1' = invlogit(`xb') if $ML_y1 ==1				replace `g1' = invlogit(-`xb') if $ML_y1 ==0				alvecsum `inf' `g' = `g1', eq(1)				if (`todo'==0 | `inf' >= .) exit				mlmatsum `inf' `negH' = abs(`g1')*`lj', sq(1,1)		}	end	*//* poisson model		program define poisson		version 1.0		args lnf mu		quietly replace `lnf' = $ML y1*ln(`mu')- `mu' - lnfact($ML y1)		end*/	program mllinrr /* modeled after david's use of nlmixed in 2008 paper */		version 10		args lnf b1x b0 /*lnf = nat. log mean function, b1x = beta coefs, b0 = intercept, sigma = std. error*/				quietly replace `lnf' = $ML_y1*ln(exp(`b0')*(1+`b1x')) + (1-$ML_y1)*ln(1- (exp(`b0')*(1+`b1x')))		end			ml model lf mllinrr (b1: cancer = d_lubin) (b0: age_entry, nocons)	ml check	    	*ml max	program drop mllinrr